{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","onload","setInterval","sec","document","getElementById","innerHTML","className","id","onClick","type","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"iPAiEeA,G,kNA3DbC,OAAO,WACLC,aAAY,WACZ,IAAIC,EAAIC,SAASC,eAAe,gBAAgBC,aAGvC,KAANH,IAEDC,SAASC,eAAe,gBAAgBC,UAAU,GAE3C,KAANH,KAGQ,KADDC,SAASC,eAAe,gBAAgBC,cAG9CF,SAASC,eAAe,gBAAgBC,UAAU,EAEzC,KADAF,SAASC,eAAe,aAAaC,cAG7CF,SAASC,eAAe,aAAaC,UAAU,EAC/CF,SAASC,eAAe,YAAYC,iBAKvC,M,uDAIK,IAAD,OACN,OACE,sBAAKC,UAAU,OAAf,UACE,sBAAKA,UAAU,OAAf,UACA,qBAAKA,UAAU,SAAf,SAAyB,oBAAIC,GAAG,WAAP,kBACzB,8BAAK,oBAAID,UAAU,UAAd,uBAEL,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,UAAf,SAA0B,oBAAKC,GAAG,YAAR,kBAC1B,8BAAK,oBAAID,UAAU,WAAd,uBAEP,sBAAKA,UAAU,UAAf,UACA,qBAAKA,UAAU,YAAf,SAA4B,oBAAIC,GAAG,eAAP,kBAC5B,8BAAK,oBAAID,UAAU,UAAd,0BAGN,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,YAAf,SAA4B,oBAAIC,GAAG,eAAP,kBAC5B,8BAAK,oBAAID,UAAU,aAAd,0BAEP,qBAAKA,UAAU,UAAf,SACG,wBAAQE,QAAS,kBAAI,EAAKR,UAAUM,UAAU,QAAQG,KAAK,SAASF,GAAG,QAAvE,4B,GApDQG,cCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnB,SAASC,eAAe,SAM1BO,M","file":"static/js/main.da06193b.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\nclass App extends Component{\n  \n\n  onload=()=>{\n    setInterval(function(){\n    let sec=document.getElementById('secondsvalue').innerHTML++;\n    \n  \n    if(sec===60)\n    {\n      document.getElementById(\"secondsvalue\").innerHTML=0;\n    }\n    if(sec===60)\n    {\n      let min=document.getElementById(\"minutesvalue\").innerHTML++;\n      if(min===60)\n      {\n        document.getElementById(\"minutesvalue\").innerHTML=0;\n       let hour= document.getElementById(\"hourvalue\").innerHTML++;\n       if(hour===24)\n       {\n         document.getElementById(\"hourvalue\").innerHTML=0;\n         document.getElementById(\"dayvalue\").innerHTML++;\n       }\n       \n      }\n    }\n    },1000)\n   \n  }\n \n  render(){\n    return(\n      <div className=\"body\"  >\n        <div className=\"days\" >\n        <div className=\"daydiv\" ><h1 id='dayvalue' >00</h1></div>\n        <div><h4 className=\"dayhead\" >Days</h4></div>\n        </div>\n        <div className=\"hour\" >\n          <div className=\"hourdiv\" ><h1  id=\"hourvalue\" >00</h1></div>\n          <div><h4 className=\"hourhead\" >hour</h4></div>\n        </div>\n        <div className=\"minutes\" >\n        <div className=\"minutediv\" ><h1 id=\"minutesvalue\" >00</h1></div>\n        <div><h4 className=\"minhead\" >minutes</h4></div>\n          \n       </div>\n       <div className=\"seconds\" >\n         <div className=\"seconddiv\" ><h1 id=\"secondsvalue\">00</h1></div>\n         <div><h4 className=\"secondhead\" >Seconds</h4></div>\n       </div>\n       <div className=\"buttons\" > \n          <button onClick={()=>this.onload()} className=\"start\" type=\"button\" id=\"start\"  >Start</button>\n          \n          </div>\n      </div>\n    )\n  }\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}